---
description: File Creation Rules
globs: 
alwaysApply: true
---
# File Creation Rules
- Generate complete, standalone files when creating new code.
- Include imports, interfaces, and implementation in the same file unless modularized elsewhere.
- Don't forget JSDoc (in english) with proper typings, return values and examples when it could be handy
- Example structure for a new sub-component file for "Magic Pill" component:
```jsx
"use client"
import React, { useState } from "react";
import "./magicpill.css";

import { MagicPillNavbar } from "./types/navbar";

interface NavItemsProps {
  mode: "navbar";
  navbar: MagicPillNavbar;
}

const Navbar = ( {navbar}: NavItemsProps) => {

  const { navItems } = navbar || {};

  const [active, setActive] = useState("Home");

  return (
    <nav className="navbar">
    <ul className="navbarList">
      {navItems?.map((item, index) => (
        <li key={index} className={active === item.label ? "navbarItem active" : "navbarItem"} onClick={() => setActive(item.label)}>
          <a href={item.link} className="navbarLink">
            {item.label}
          </a>
        </li>
      ))}
    </ul>
  </nav>
  );
};

export default Navbar;
```